**comments:
//single line
/*multiline
comments*/

**7 Data types- anything thats meaningful to the computer. All 7 data types can be stored in a variable :
undefined, null, boolean, string, symbol, number, object

**variables- allow computers to store and manipulate data dynamically, they do this by using a label to point to the data rather than using the data itself. To declare(create) a variable use the "var" keyword: 
var

**assignment operator- to store a value in a variable you use the assignment(=) operator. Assignment goes from right to left, which means everything  to the right of the operator is resolved before the value is assigned to the variable to the left of the operator:
=

**uninitialized variable- When JavaScript variables are declared they have an initial value of undefined.If you do a math operation on an undefined variable the result will return "NaN".Concatenated strings with undefined variables returna literal string of ""undefined.:
var  myVar; //has a value of undefined

*Case sensitivity:
Hello != hello;

**Number data type is used to represent numeric data such as adding, subtracting, multiplying, and dividing.
myVar = 1+1;
myVar = 2-1;
myVar = 2*5;
myVar = 10/2;

**increment(++) operator is used to add one to a variable:
i++; means i= i+1;

**decrement(--) operator is used to decrease one from a variable:
i--; means i=i-1;

**create decimal numbers(ie "floating point" numbers or "floats") can be stored in variables as well:
var myDecimal = 5.7;

*multiplying decimals(floats):
var prodiuct= 5.2 * 3.2;

*divide one decimal by another:
var quotient = 12.5 / 2.5;

**remainder(%) operator - gives the ramainder of the division of two numbers:
var remainder = 5 %  2;

**compound assignment: 





***Functions for the end of arrays***

**push() function - it's used to append data to the end of an array - .push takes one or more parameters and "pushes" them onto the end of the array
var arr = [1, 2, 3];
arr.push(4); //arr is now [1, 2, 3, 4]

**pop() function - pop() is used to "pop" the value of the end of an array. We can store this "popped off" value by assigning it to a variable - in other words, .pop() removes the last element from an array and returns the element.
var threeArr = [1, 4, 6];
var OneDown = threeArr.pop();
console.log(oneDown); //returns 6
console.log(threeArr); //Returns [1, 4]

***Functions for the beginning of Arrays***

**shift() - the .shift() function removes the first item from the array. You can assign the "shifted off" value to an array. - works just like pop but instead of the end it works for the beginning of the array

**unshift() - .unshift() it's used to append data to the beginning of an array -  takes one or more parameters and "pushes" them onto the beginning of the array - works just like .push() except instead of adding the element at the end of an array unshift() adds the element at the beginning of the array

**functions - in javascript we can divide our code into reusable parts called functions - You can call or "invoke" your function by using it;s name followed by parentheses
function functionName() {
console.log("Hello World");
}
functionName(); //each time this function is called it will print out the message "Hello World" on the dev console. All the code between the curley braces will be executed every time the function is called

**

**

**

**

**

**

**

**

**

**

**

**










